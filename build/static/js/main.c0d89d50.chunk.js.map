{"version":3,"sources":["InfoBox.js","LineGraph.js","utils.js","Map.js","Table.js","App.js","index.js"],"names":["InfoBox","title","cases","total","onClick","active","props","Card","className","isRed","isGreen","isGray","CardContent","Typography","color","numeral","format","casesTypeColors","hex","multiplier","recovered","deaths","options","plugins","legend","display","tooltips","mode","intersect","callbacks","label","tooltipItem","value","elements","point","radius","maintainAspectRatio","scales","x","y","ticks","callback","grid","buildChartData","data","casesType","lastDataPoint","chartData","timeline","date","newDataPoint","push","LineGraph","country","useState","setData","errorMessage","setErrorMessage","useEffect","a","url","fetch","then","response","json","message","fetchData","length","datasets","backgroundColor","sortData","sort","b","showDataOnMap","map","Circle","center","countryInfo","lat","long","pathOptions","fillColor","fillOpacity","Popup","style","backgroundImage","flag","Map","countries","zoom","ChangeView","useMap","setView","MapContainer","scrollWheelZoom","TileLayer","attribution","Table","App","setCountriesData","setCountry","setCountryInfo","tableData","setTableData","setCasesType","mapCenter","setMapCenter","setZoom","mapCountries","setMapCountries","name","iso2","sortedData","getCountriesData","onCountryChange","event","countryCode","target","err","FormControl","Select","variant","onChange","MenuItem","e","todayCases","todayRecovered","todayDeaths","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0d89d50.chunk.js","sourcesContent":["import { Card, CardContent, Typography} from '@material-ui/core'\r\nimport React from 'react'\r\nimport './InfoBox.css'\r\nimport numeral from 'numeral'\r\n\r\n\r\nfunction InfoBox({ title, cases, total, onClick, active, ...props }) {\r\n    return (\r\n            <Card onClick={onClick} className={`infoBox ${active && props.isRed && \"infoBox--red\"} ${active && props.isGreen && \"infoBox--green\"} ${active && props.isGray && \"infoBox--gray\"}`}>\r\n                <CardContent>\r\n                    <Typography className=\"infoBox__title\" color=\"textSecondary\">\r\n                        {title}\r\n                    </Typography>\r\n\r\n                    <h2 className={`infoBox__total ${props.isRed && \"infoBox__total__red\"} ${props.isGreen && \"infoBox__total__green\"} ${props.isGray && \"infoBox__total__gray\"}`} color=\"textSecondary\">{numeral(total).format(\"0.0a\")}</h2>\r\n\r\n                    <Typography className=\"infoBox__cases\">+ {numeral(cases).format(\"0a\")}</Typography>\r\n                </CardContent>\r\n            </Card>\r\n    )\r\n}\r\n\r\nexport default InfoBox;","import numeral from \"numeral\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport \"./App.css\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#CC1034\",\r\n    // rgb: \"rgb(204,16,52)\",\r\n    // half_op: \"rgba(204,16,52,0.5)\",\r\n    multiplier: 800,\r\n  },\r\n\r\n  recovered: {\r\n    hex: \"#7DD71D\",\r\n    // rgb: \"rgb(125,215,29)\",\r\n    // half_op: \"rgba(125,215,29,0.5)\",\r\n    multiplier: 1200,\r\n  },\r\n\r\n  deaths: {\r\n    hex: \"gray\",\r\n    // rgb: \"rgb(251,68,67)\",\r\n    // half_op: \"rgba(251,68,67,0.5)\",\r\n    multiplier: 2000,\r\n  },\r\n};\r\n\r\nconst options = {\r\n  plugins: {\r\n    legend: {\r\n      display: false,\r\n    },\r\n\r\n    tooltips: {\r\n      mode: \"index\",\r\n      intersect: true,\r\n      callbacks: {\r\n        label: function (tooltipItem) {\r\n          return numeral(tooltipItem.value).format(\"+0,0\");\r\n        },\r\n      },\r\n    },\r\n\r\n    title: {\r\n      display: false,\r\n    },\r\n\r\n\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n\r\n  maintainAspectRatio: false,\r\n  scales: {\r\n    x: {\r\n      display: true\r\n    },\r\n\r\n    y: {\r\n      ticks: {\r\n        callback: function (value) {\r\n          return numeral(value).format(\"0a\");\r\n        },\r\n      },\r\n      grid: {\r\n        display: false\r\n      }\r\n    },\r\n  }\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  if (data.timeline) {\r\n    for (let date in data.timeline.cases) {\r\n      if (lastDataPoint) {\r\n        let newDataPoint = {\r\n          x: date,\r\n          y: data.timeline[casesType][date] - lastDataPoint,\r\n        };\r\n        chartData.push(newDataPoint);\r\n      }\r\n      lastDataPoint = data.timeline[casesType][date];\r\n    }\r\n  }\r\n  else {\r\n    for (let date in data.cases) {\r\n      if (lastDataPoint) {\r\n        let newDataPoint = {\r\n          x: date,\r\n          y: data[casesType][date] - lastDataPoint,\r\n        };\r\n        chartData.push(newDataPoint);\r\n      }\r\n      lastDataPoint = data[casesType][date];\r\n    }\r\n  }\r\n  return chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType, country }) {\r\n  const [data, setData] = useState({});\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n\r\n      const url = country === \"worldwide\" ?\r\n        \"https://disease.sh/v3/covid-19/historical/all?lastdays=120\" :\r\n        `https://disease.sh/v3/covid-19/historical/${country}?lastdays=120`\r\n\r\n      await fetch(url)\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          // console.log(data);\r\n          setErrorMessage(data.message);\r\n          let chartData = buildChartData(data, casesType);\r\n          setData(chartData);\r\n          // console.log(chartData);\r\n          // buildChart(chartData);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [casesType, country]);\r\n\r\n  if (errorMessage) {\r\n    return (\r\n      <div className=\"app__graph app__errorMessage\">\r\n        {errorMessage}\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <div className=\"app__graph\">\r\n        {data?.length > 0 && (\r\n          <Bar\r\n            data={{\r\n              datasets: [\r\n                {\r\n                  backgroundColor: casesTypeColors[casesType].hex,\r\n                  data: data,\r\n                },\r\n              ],\r\n            }}\r\n            options={options}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LineGraph;","import numeral from \"numeral\";\r\nimport React from \"react\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\nimport \"./Map.css\";\r\n\r\nconst casesTypeColors = {\r\n    cases: {\r\n      hex: \"#CC1034\",\r\n      // rgb: \"rgb(204,16,52)\",\r\n      // half_op: \"rgba(204,16,52,0.5)\",\r\n      multiplier: 800,\r\n    },\r\n  \r\n    recovered: {\r\n      hex: \"#7DD71D\",\r\n      // rgb: \"rgb(125,215,29)\",\r\n      // half_op: \"rgba(125,215,29,0.5)\",\r\n      multiplier: 1200,\r\n    },\r\n  \r\n    deaths: {\r\n      hex: \"gray\",\r\n      // rgb: \"rgb(251,68,67)\",\r\n      // half_op: \"rgba(251,68,67,0.5)\",\r\n      multiplier: 2000,\r\n    },\r\n  };\r\n\r\nexport const sortData = (data) => {\r\n    const sortedData = [...data];\r\n\r\n    return sortedData.sort((a, b) => (b.cases - a.cases))\r\n}\r\n\r\nexport const showDataOnMap = (data, casesType) =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      pathOptions={{\r\n        color: casesTypeColors[casesType].hex,\r\n        fillColor: casesTypeColors[casesType].hex,\r\n      }}\r\n      fillOpacity={0.4}\r\n      radius={\r\n        100000\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          />\r\n          <div className=\"info-name\">{country.country}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases: {numeral(country.cases).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));","import React from \"react\";\r\nimport { MapContainer, TileLayer, useMap } from \"react-leaflet\";\r\nimport \"./Map.css\";\r\nimport { showDataOnMap } from \"./utils\";\r\n\r\nfunction Map({ countries, casesType, center, zoom }) {\r\n\r\n    function ChangeView({ center, zoom }) {\r\n        const map = useMap();\r\n        map.setView(center, zoom);\r\n        return null;\r\n      }\r\n\r\n  return (\r\n    <MapContainer\r\n      casesType={casesType}\r\n      className=\"map\"\r\n      center={center}\r\n      zoom={zoom}\r\n      scrollWheelZoom={false}\r\n    >\r\n      <ChangeView center={center} zoom={zoom} />\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      {showDataOnMap(countries, casesType)}\r\n    </MapContainer>\r\n  );\r\n}\r\n\r\nexport default Map;","import React from 'react';\r\nimport './Table.css';\r\nimport numeral from 'numeral'\r\n\r\nfunction Table({ countries }) {\r\n    return (\r\n        <div className=\"table\">\r\n            {countries.map(({ country, cases }) => (\r\n                <tr>\r\n                    <td>{country}</td>\r\n                    <td><strong>{numeral(cases).format(\"0,0\")}</strong></td>\r\n                </tr>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table;","import { Card, CardContent, FormControl, MenuItem, Select } from '@material-ui/core';\nimport \"leaflet/dist/leaflet.css\";\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport InfoBox from \"./InfoBox\";\nimport LineGraph from \"./LineGraph\";\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport { sortData } from \"./utils\";\n\n\nfunction App() {\n\n  const [countries, setCountriesData] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState([15, 19]);\n  const [zoom, setZoom] = useState(2);\n  const [mapCountries, setMapCountries] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then(response => response.json())\n      .then(data => {\n        setCountryInfo(data);\n      })\n  }, [])\n\n  // useEffect(() => {\n  //   fetch(\"https://disease.sh/v3/covid-19/countries/?sort=cases\")\n  //   .then(response => response.json())\n  //   .then(data => {\n  //     setTableData(data);\n  //   })\n  // }, [])\n  useEffect(() => {\n\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries?\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          setCountriesData(countries);\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setMapCountries(data);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    // console.log(event.target.value);\n\n    const url = countryCode === 'worldwide' ?\n      'https://disease.sh/v3/covid-19/all' :\n      `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n        try{\n          setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n          setZoom(7);\n        }\n        catch(err){\n          setMapCenter([15, 19]);\n          setZoom(2);\n        }\n      })\n  }\n\n\n  return (\n    <div className=\"app\">\n\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 TRACKER</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}>\n\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map(({ value, name }) => (\n                <MenuItem value={value}>{name}</MenuItem>\n              ))}\n\n            </Select>\n          </FormControl>\n        </div>\n\n\n        <div className=\"app__stats\">\n          <InfoBox isRed active={casesType === \"cases\"} onClick={ e=> setCasesType(\"cases\")} title=\"CoronaVirus Cases\" cases={countryInfo.todayCases} total={countryInfo.cases} />\n          <InfoBox isGreen active={casesType === \"recovered\"} onClick={ e=> setCasesType(\"recovered\")} title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered} />\n          <InfoBox isGray active={casesType === \"deaths\"} onClick={ e=> setCasesType(\"deaths\")} title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths} />\n        </div>\n\n        <Map\n          countries={mapCountries}\n          center={mapCenter}\n          zoom={zoom}\n          casesType={casesType} />\n      </div>\n\n\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Daily new {casesType}</h3>\n          <LineGraph casesType={casesType} country={country} />\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n"],"sourceRoot":""}